name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.3)'
        required: true

jobs:
  pre-release-tests:
    name: Pre-Release Tests
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install dependencies
        run: |
          if [ "${{ runner.os }}" == "Linux" ]; then
            sudo apt-get update
            sudo apt-get install -y bats
          else
            brew install bash bats-core
          fi
      
      - name: Run full test suite
        run: |
          chmod +x tests/run_tests.sh
          bash tests/run_tests.sh -v
      
      - name: Verify script version matches tag
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        run: |
          TAG_VERSION="${GITHUB_REF#refs/tags/v}"
          SCRIPT_VERSION=$(grep '^VERSION=' shell-bun.sh | head -n1 | cut -d'"' -f2)
          
          if [ "$TAG_VERSION" != "$SCRIPT_VERSION" ]; then
            echo "Error: Tag version ($TAG_VERSION) does not match script version ($SCRIPT_VERSION)"
            exit 1
          fi
          echo "✓ Version check passed: $SCRIPT_VERSION"
  
  create-release:
    name: Create Release
    needs: pre-release-tests
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Extract version from tag
        id: version
        run: |
          VERSION="${GITHUB_REF#refs/tags/v}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      
      - name: Create changelog
        id: changelog
        run: |
          # Extract changelog for this version from git commits
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -n "$PREV_TAG" ]; then
            CHANGELOG=$(git log ${PREV_TAG}..HEAD --pretty=format:"- %s" --no-merges)
          else
            CHANGELOG=$(git log --pretty=format:"- %s" --no-merges | head -20)
          fi
          
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Shell-Bun v${{ steps.version.outputs.version }}
          body: |
            ## Shell-Bun v${{ steps.version.outputs.version }}
            
            Interactive build environment script with fuzzy pattern matching and parallel execution.
            
            ### Changes
            ${{ steps.changelog.outputs.changelog }}
            
            ### Installation
            
            ```bash
            # Download shell-bun.sh
            curl -O https://raw.githubusercontent.com/Chetic/shell-bun/v${{ steps.version.outputs.version }}/shell-bun.sh
            chmod +x shell-bun.sh
            
            # Download example config
            curl -O https://raw.githubusercontent.com/Chetic/shell-bun/v${{ steps.version.outputs.version }}/shell-bun.cfg
            ```
            
            ### Usage
            
            ```bash
            # Interactive mode
            ./shell-bun.sh
            
            # CI mode
            ./shell-bun.sh --ci MyApp build
            ```
            
            See [README.md](https://github.com/Chetic/shell-bun/blob/v${{ steps.version.outputs.version }}/README.md) for full documentation.
          files: |
            shell-bun.sh
            shell-bun.cfg
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Notify success
        run: |
          echo "✓ Release v${{ steps.version.outputs.version }} created successfully"
